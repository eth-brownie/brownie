name: Repo Chores

on:
  pull_request:
    branches:
      - master
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}  # Check out the PR branch

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Cache .mypy_cache
      uses: actions/cache@v4
      with:
        path: .mypy_cache
        key: mypy-cache-${{ runner.os }}-${{ hashFiles('**/*.py', 'pyproject.toml') }}

    - name: Install Black
      run: pip install black

    - name: Run black .
      run: black .

    - name: Install Pip Tools
      run: pip install pip-tools
      
    - name: Run Pip Compile
      run: pip-compile -U

    - name: Run Pip Compile for Windows
      run: pip-compile -U requirements-windows.in

    - name: Run Pip Compile for Dev Deps
      run: pip-compile -U requirements-dev.in
    
    - name: Install Mypyc and Deps
      run: |
        pip install -U types-PyYAML
        pip install -r requirements.txt

    - name: Compile
      run: pip install .
        
    - name: Normalize C files for diffchecking
      # This makes it much easier to diffcheck changes in the C files
      run: |
        # Insert DIFFCHECK_PLACEHOLDER macro at the top if not present
        for f in build/*.c; do
          if ! grep -q 'DIFFCHECK_PLACEHOLDER' "$f"; then
            sed -i '1i#ifndef DIFFCHECK_PLACEHOLDER\n#define DIFFCHECK_PLACEHOLDER 0\n#endif' "$f"
          fi
        done
        # Replace line number in CPy_AddTraceback with macro
        sed -i 's/\(CPy_AddTraceback([^,]*, *[^,]*, *\)[0-9]\+\(, *[^)]*)\)/\1DIFFCHECK_PLACEHOLDER\2/g' build/*.c
        # Replace index in CPyStatics[...] with macro
        sed -i 's/CPyStatics\[[0-9]\+\]/CPyStatics[DIFFCHECK_PLACEHOLDER]/g' build/*.c
    
    - name: Check for changes
      id: changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "changes_detected=true" >> $GITHUB_ENV
        else
          echo "changes_detected=false" >> $GITHUB_ENV
        fi
    - name: Commit changes
      if: env.changes_detected == 'true'
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "chore: \`black .\` and \`pip-compile\` and compile C files for source control"
        git push
