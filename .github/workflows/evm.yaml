on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 12 * * *'  # Daily 1200 UTC
  workflow_dispatch:

name: evm tests

# This limits the workflow to 1 active run at any given time for a specific branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  ETHERSCAN_TOKEN: 9MKURTHE8FNA9NRUUJBHMUEVY6IQ5K1EGY
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  WEB3_INFURA_PROJECT_ID: 44c6300c5e5b4b2da5fc42b06bf18a8e

jobs:

  evm:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        job: [evm-byzantium, evm-petersburg, evm-istanbul, evm-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Cache Solidity Installations
      uses: actions/cache@v4
      with:
        path: |
          ~/.solcx
          ~/.vvm
        key: ${{ runner.os }}-compiler-cache

    - name: Setup Node.js
      uses: actions/setup-node@v4

    - name: Install Ganache
      run: npm install -g ganache@7.9.2

    - name: Setup Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: pip
        cache-dependency-path: |
          pyproject.toml
          setup.py
          requirements.in
          requirements.txt
          requirements-windows.in
          requirements-windows.txt
          requirements-dev.in
          requirements-dev.txt

    - name: Install Tox
      run: pip install tox
      
    - name: Cache tox environment
      uses: actions/cache@v4
      with:
        path: .tox
        key: ${{ runner.os }}-${{ matrix.job }}-${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles('pyproject.toml', 'setup.py', 'requirements.in', 'requirements.txt', 'requirements-windows.in', 'requirements-windows.txt', 'requirements-dev.in', 'requirements-dev.txt', 'tox.ini') }}

    - name: Restore ccache cache
      id: restore-ccache
      uses: actions/cache/restore@v4
      with:
        path: ~/.cache/ccache
        key: ccache-${{ runner.os }}-${{ hashFiles('setup.py', 'pyproject.toml') }}-${{ hashFiles('**/*.h', '**/*.c', '**/*.py') }}
        restore-keys: ccache-${{ runner.os }}-${{ hashFiles('setup.py', 'pyproject.toml') }}-

    - name: Install ccache
      run: sudo apt-get update && sudo apt-get install -y ccache

    - name: Run Tox
      env:
        CC: ccache gcc
      run: tox -e ${{ matrix.job }}

    - name: Save ccache cache
      uses: actions/cache/save@v4
      with:
        path: ~/.cache/ccache
        key: ccache-${{ runner.os }}-${{ hashFiles('setup.py', 'pyproject.toml') }}-${{ hashFiles('**/*.h', '**/*.c', '**/*.py') }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
