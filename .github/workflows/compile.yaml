name: Compile C Files

on:
  push:
    branches:
      - master
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Cache .mypy_cache
        uses: actions/cache@v4
        with:
          path: .mypy_cache
          key: mypy-cache-${{ runner.os }}-${{ hashFiles('**/*.py', 'pyproject.toml') }}

    - name: Normalize C files for diffchecking
        # This makes it much easier to diffcheck changes in the C files
        run: |
          # Insert DIFFCHECK_PLACEHOLDER macro at the top if not present
          for f in build/*.c; do
            if ! grep -q 'DIFFCHECK_PLACEHOLDER' "$f"; then
              sed -i '1i#ifndef DIFFCHECK_PLACEHOLDER\n#define DIFFCHECK_PLACEHOLDER 0\n#endif' "$f"
            fi
          done
          # Replace line number in CPy_AddTraceback with macro
          sed -i 's/\(CPy_AddTraceback([^,]*, *[^,]*, *\)[0-9]\+\(, *[^)]*)\)/\1DIFFCHECK_PLACEHOLDER\2/g' build/*.c
          # Replace index in CPyStatics[...] with macro
          sed -i 's/CPyStatics\[[0-9]\+\]/CPyStatics[DIFFCHECK_PLACEHOLDER]/g' build/*.c

    - name: Compile
      run: pip install .

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        branch: compile-c-files-auto
        base: master
        title: "chore: Compile C files for source control"
        body: "This PR was created automatically by GitHub Actions in response to recent changes on master branch."
        commit-message: "chore: compile C files for source control"
